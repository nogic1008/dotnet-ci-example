name: .NET Core CI/CD

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.0
      - name: Setup .NET SDK # detected from global.json
        uses: actions/setup-dotnet@v2.0.0
      - name: Restore Tool
        run: dotnet tool restore
      - name: Add Problem Matcher for dotnet-format
        uses: xt0rted/dotnet-format-problem-matcher@v1.2.0
      - name: Lint
        run: dotnet format --check

  restore:
    name: Update NuGet Lock Files
    if: contains(github.head_ref, 'dependabot') && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.0
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - uses: actions/cache@v3.0.1
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET SDK # detected from global.json
        uses: actions/setup-dotnet@v2.0.0

      - name: Restore
        run: dotnet restore --force-evaluate
      - name: Run ECLint
        run: |
          npm install -g eclint
          eclint fix "**/packages.lock.json"
      - name: Diff
        id: diff
        continue-on-error: true
        run: |
          git add -N .
          git diff --name-only --exit-code
      - name: Commit & Push
        if: steps.diff.outcome == 'failure'
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add .
          git commit -m "chore(deps): update NuGet lock file"
          git push

  test:
    name: Debug Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3.0.1
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET SDK # detected from global.json
        uses: actions/setup-dotnet@v2.0.0

      - name: Restore
        run: dotnet restore --locked-mode
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --settings coverlet.runsettings

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.0.0
        with:
          flags: ${{ runner.os }}
